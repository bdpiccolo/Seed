# Created 3/6/2013 by Daniel Beck
# User interface file for shiny

library(shiny)

plotHeight="600px"
heatmapPlotHeight="600px"

shinyUI(pageWithSidebar(
  
  # Application title
  headerPanel("microbePlot"),
  tabsetPanel(
    
    tabPanel("Data", 
      sidebarPanel(
        fileInput("metaFilename", "Select metadata file", accept=c('text/csv', 'text/comma-separated-values,text/plain')),
        checkboxInput("metaOptions", "Show file options"),
        conditionalPanel(
          condition = "input.metaOptions == true",
          checkboxInput('metaHeader', 'Header', TRUE),
          selectInput('metaSep', 'Separator', c(Comma=',', Semicolon=';', Tab='\t'), 'Comma'),
          selectInput('metaQuote', 'Quote', c(None='', 'Double Quote'='"', 'Single Quote'="'"), 'Double Quote')
        ),
        HTML('<hr>'),
        
        fileInput("microbeFilename", "Select microbe file", accept=c('text/csv', 'text/comma-separated-values,text/plain')),
        checkboxInput("microbeOptions", "Show file options"),
        conditionalPanel(
          condition = "input.microbeOptions == true",
          checkboxInput('microbeHeader', 'Header', TRUE),
          selectInput('microbeSep', 'Separator', c(Comma=',', Semicolon=';', Tab='\t'), 'Comma'),
          selectInput('microbeQuote', 'Quote', c(None='', 'Double Quote'='"', 'Single Quote'="'"), 'Double Quote')
        ),
        HTML('<br>'),
        
        selectInput("dataTransform", "Transform data:", 
                     list("None"="none",
                          "Relative abundance" = "total",
                          "Presence/absence" = "pa",
                          "Hellinger" = "hellinger"
                     )
        ),
        
        radioButtons("saveType", "Save plots as:", 
                     list("PDF" = "pdf",
                          "PNG" = "png")
        ),
        HTML('<hr>'),
        helpText("Input data must be in two files. The metadata file should include sample information. 
                  The microbe file should include the abundances of the microbes in each sample. 
                  Samples must be in rows.")
      ),
             
      mainPanel(
        tableOutput("viewMetaData"),
        tableOutput("viewMicrobeData"),
        HTML("<br>"),
        helpText("This Venn diagram shows the number of samples in each file. Only the overlapping 
                 samples are retained for use by microbePlot."),
        plotOutput("vennPlot", height="300px")
      )
    ),
    
    # Histogram tab
    tabPanel("Histogram", 

      uiOutput("histVariableSelection"),
  
      mainPanel(    
        plotOutput("histPlot", height=plotHeight)
      )
    ),
    
    # Scatterplot tab
    tabPanel("Scatter",
      uiOutput("scatterVariableSelection"),
      
      mainPanel(
        plotOutput("scatterPlot", height=plotHeight)
      )
    ),
    
      
    # PCoA tab
    tabPanel("PCoA", 
             uiOutput("pcoaVariableSelection"),
             
             mainPanel(
                 plotOutput("pcoaPlot", height=plotHeight)
             )
             
    ),
    
    
    # bar charts
    tabPanel("Bar plot",
             uiOutput("barVariableSelection"),
             
             mainPanel(
               plotOutput("barPlot", height=plotHeight)
             )
    ),
    tabPanel("Cluster", 
             uiOutput("clusterVariableSelection"),
             
             mainPanel(
               tabsetPanel(
                 id = "clusterTab",
                 tabPanel("Complete", value="complete",
                          plotOutput("clusterPlot", height=plotHeight)
                 ),
                 tabPanel("Subtrees", value="subtree",
                          plotOutput("clusterGroupPlot", height=plotHeight)
                 )
              )
             )
             
    ),
    # wgcna
    tabPanel("WGCNA",
             uiOutput("wgcnaVariableSelection"),
             mainPanel(
               tabsetPanel(
                 id="wgcnaTab",
                 tabPanel("Dendrogram", value="ndendrogram",
                          plotOutput("dendroPlot", height=plotHeight)
                 ),
                 tabPanel("Heatmap", value="nheatmap",
                          plotOutput("htmpPlot", height=plotHeight)
                 ),
                 tabPanel("Correlations", value="ncorrelations",
                          plotOutput("corPlot", height=plotHeight)
                 )
                 
               )
             )
    ),
    # heatmap
    tabPanel("Heatmap",
      uiOutput("heatmapVariableSelection"),
      mainPanel(
        plotOutput("heatmapPlot", height=heatmapPlotHeight)
      )
    ),
    # stacked bar plot
    tabPanel("Stacked bar plot",
             uiOutput("stackedbarVariableSelection"),
             mainPanel(
               plotOutput("stackedBarPlot", height=plotHeight)
             )
    ),    
 
    # help
    tabPanel("Help",
      sidebarPanel(
        selectInput("helpTopic", "Help topic", choices=c("About", "Data", "Histogram", "Scatter", 
                    "PCoA", "Bar plot", "Cluster", "WGCNA", "Heatmap", "Color"))
      ),
      mainPanel(
        conditionalPanel(
          condition = "input.helpTopic == 'About'",
          helpText("microbePlot is a tool for visualizing microbial community data. It is currently being developed
                   and may include errors in both plots and analyses. Any results provided by microbePlot should be 
                   used with caution."),
          helpText("Comments, suggestions, or bug reports are welcome. I can be reached by email at danlbek@gmail.com
                   The source code and install instructions for microbePlot are available at https://github.com/danlbek/microbePlot."),
          helpText("microbePlot is licensed under GPLv3")
        ),
        conditionalPanel(
          condition = "input.helpTopic == 'Data'",

          includeHTML("./html/help_data.html")
        
        ),
        
        conditionalPanel(
          condition = "input.helpTopic == 'Histogram'",
          helpText("The histogram panel displays a histogram of the selected variable. Additional summary information about
                   the variable is shown in the sidebar. The 'breaks' slider controls the aproximate number of histogram bars.")
        ),        
        conditionalPanel(
          condition = "input.helpTopic == 'Scatter'",
          helpText("The scatter panel displays a scatter plot of two selected variables. The X variable is displayed on the X
                   axis and the Y variable on the Y axis. The color variable and color options control the color of the plotted 
                   points. See the 'Color' help topic for details.")
        ),        
        conditionalPanel(
          condition = "input.helpTopic == 'PCoA'",
          includeHTML("./html/help_PCoA.html")
        ),        
        conditionalPanel(
          condition = "input.helpTopic == 'Bar plot'",
          helpText("The bar plot panel displayes a bar plot using variables selected in the sidebar. The value variable defines 
                   the height of the bars. The bar variable defines the bar categories. The bar variable may be reduced to categories
                   by selecting 'Categorize bar variable'. This option breaks the bar variable into categories of equal width.
                   The number of samples represented by each bar is shown in blue. Error bars show 95% confidence intervals, assuming
                   that the samples are independent and normally distributed. NA values are removed from the analysis.")
        ),        
        conditionalPanel(
          condition = "input.helpTopic == 'Cluster'",
          includeHTML("./html/help_cluster.html")
        ),        
        conditionalPanel(
          condition = "input.helpTopic == 'WGCNA'",
          includeHTML("./html/help_wgcna.html")
        ),
        conditionalPanel(
          condition = "input.helpTopic == 'Heatmap'",
          includHTML("./html/help_heatmap.html")
        ),
        conditionalPanel(
          condition = "input.helpTopic == 'Color'",
          helpText("Many plot color points or bars based on a user selected variable. This allows the user to view the distribution of the color
                   variable across the samples, effectively adding another dimension to the plot. There are three main options, each of which 
                   may be appropriate in different situations. The 'Unique' option generates a different color for each different value of the variable.
                   This option works well up to about ten values. When there are many more values the selected colors are still unique, however, they
                   become difficult to tell apart. The 'Gradient' option may be used when the color variable is continuous. This option selects colors
                   from a gradient. This makes it easy to distinguish between low and high valued colors. The third option is to 
                   use color 'Categories'. This option breaks the color variable up into a user selected number of groups. These groups are then 
                   given unique colors.")
        )
      )
    )
  ),  

  mainPanel()
))
        
